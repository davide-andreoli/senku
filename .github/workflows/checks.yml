name: Pull Request Checks

on:
    pull_request

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Poetry
              uses: ./.github/actions/setup-poetry
            - name: Get changed Python files
              id: changed-files
              run: |
                git fetch origin ${{ github.base_ref }}
                CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '\.py$' | tr '\n' ' ' || true)
                echo "changed=$CHANGED_FILES" >> $GITHUB_OUTPUT
            - name: Run ruff on changed files
              if: steps.changed-files.outputs.changed != ''
              run: |
                poetry run ruff check ${{ steps.changed-files.outputs.changed }}

    type-check:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Poetry
              uses: ./.github/actions/setup-poetry
            - name: Get changed Python files
              id: changed-files
              run: |
                git fetch origin ${{ github.base_ref }}
                CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '\.py$' | tr '\n' ' ' || true)
                echo "changed=$CHANGED_FILES" >> $GITHUB_OUTPUT
            - name: Run pyright on changed files
              if: steps.changed-files.outputs.changed != ''
              run: |
                poetry run pyright ${{ steps.changed-files.outputs.changed }}

    tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Poetry
              uses: ./.github/actions/setup-poetry
            - name: Map changed files to test files
              id: changed-tests
              run: |
                git fetch origin ${{ github.base_ref }}
                CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '\.py$' | tr '\n' ' ' || true)

                TEST_FILES=""
                for file in $CHANGED_FILES; do
                  # If it's a test file already, include it directly
                  if [[ "$file" == tests/test_*.py || "$file" == tests/*/test_*.py ]]; then
                    TEST_FILES="$TEST_FILES $file"
                  else

                    base=$(basename "$file" .py)
                    dir=$(dirname "$file")

                    test_path="$dir"
                    if [[ "$test_path" == app/* ]]; then
                      test_path="${test_path#app/}"
                    fi

                    test_file="tests/$test_path/test_$base.py"

                    if [[ -f "$test_file" ]]; then
                      TEST_FILES="$TEST_FILES $test_file"
                    fi
                  fi
                done

                echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
                echo "test_files=$TEST_FILES" >> $GITHUB_OUTPUT

            - name: Print changed and test files
              run: |
                echo "Changed Python files:"
                echo "${{ steps.changed-tests.outputs.changed_files }}"
                echo ""
                echo "Matched test files:"
                echo "${{ steps.changed-tests.outputs.test_files }}"

            - name: Run tests
              if: steps.changed-tests.outputs.test_files != ''
              run: |
                poetry run pytest ${{ steps.changed-tests.outputs.test_files }}
